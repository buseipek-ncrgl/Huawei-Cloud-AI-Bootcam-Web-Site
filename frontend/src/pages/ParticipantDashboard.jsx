import { useEffect, useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";

const panels = [
  { key: "Profil", title: "üôã‚Äç‚ôÇÔ∏è Profilim" },
  { key: "Duyurular", title: "üì¢ Duyurular" },
  { key: "Hakkƒ±mƒ±zda", title: "‚ÑπÔ∏è Hakkƒ±mƒ±zda" },
  { key: "Program", title: "üìÖ Eƒüitim Programƒ±" },
  { key: "Katƒ±lƒ±m", title: "üìù Katƒ±lƒ±m Durumu" },
  { key: "Eƒüitmenler", title: "üë®‚Äçüè´ Eƒüitmenler" },
  { key: "Kaynaklar", title: "üìö Eƒüitim Kaynaklarƒ±" },
  { key: "G√∂revler", title: "‚úÖ Haftalƒ±k G√∂revler" },
  { key: "Sertifika", title: "üéì Sertifika" },
  { key: "Huawei Cloud Hesabƒ±", title: "‚òÅÔ∏è Huawei Cloud Hesabƒ±" },
  { key: "Kurallar", title: "üìå Katƒ±lƒ±m Kurallarƒ±" },
  { key: "Sorular", title: "‚ùì Sƒ±k√ßa Sorulan Sorular" },
  { key: "ƒ∞leti≈üim", title: "‚úâÔ∏è ƒ∞leti≈üim Bilgileri" },
];


const panelTitles = {
  Profil: "üôã‚Äç‚ôÇÔ∏è Profilim",
  Duyurular: "üì¢ Duyurular",
  Hakkƒ±mƒ±zda: "‚ÑπÔ∏è Hakkƒ±mƒ±zda",
  Program: "üìÖ Eƒüitim Programƒ±",
  Katƒ±lƒ±m: "üìù Katƒ±lƒ±m Durumu",
  Eƒüitmenler: "üë®‚Äçüè´ Eƒüitmenler",
  Kaynaklar: "üìö Eƒüitim Kaynaklarƒ±",
  G√∂revler: "‚úÖ Haftalƒ±k G√∂revler",
  Sertifika: "üéì Sertifika",
  "Huawei Cloud Hesabƒ±": "‚òÅÔ∏è Huawei Cloud Hesabƒ±",
  Kurallar: "üìå Katƒ±lƒ±m Kurallarƒ±",
  Sorular: "‚ùì Sƒ±k√ßa Sorulan Sorular",
  ƒ∞leti≈üim: "‚úâÔ∏è ƒ∞leti≈üim Bilgileri",
};


function parseJwt(token) {
  try {
    return JSON.parse(atob(token.split('.')[1]));
  } catch (e) {
    return {};
  }
}

const ParticipantDashboard = () => {
  const [sessions, setSessions] = useState([]);
  const [fullName, setFullName] = useState("");
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [activePanel, setActivePanel] = useState("Program");
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const navigate = useNavigate();
  const [announcements, setAnnouncements] = useState([]);
  const [user, setUser] = useState(null); // üü° Profil i√ßin kullanƒ±cƒ± bilgisi
  const [certificateUrl, setCertificateUrl] = useState("");
  const [editingField, setEditingField] = useState(null);
const [editValues, setEditValues] = useState({
  fullName: user?.fullName || "",
  email: user?.email || ""
});

  // useEffect dƒ±≈üƒ±nda, en √ºstte tanƒ±mla
const fetchData = async () => {
  try {
    const token = localStorage.getItem("token");
    if (!token) {
      navigate("/login");
      return;
    }

    // Sessions verisini √ßek
    const sessionRes = await axios.get(`${import.meta.env.VITE_API_URL}/api/attendance/sessions`, {
      headers: { Authorization: `Bearer ${token}` },
    });

    if (!sessionRes.data.sessions) {
      throw new Error(sessionRes.data.error || "Veri alƒ±namadƒ±");
    }

    let initialSessions = sessionRes.data.sessions;
    const fullName = sessionRes.data.fullName;
    const email = sessionRes.data.email;

    // Submissions verisini √ßek
    const submissionRes = await axios.get(`${import.meta.env.VITE_API_URL}/api/attendance/task-submissions`, {
      headers: { Authorization: `Bearer ${token}` },
    });

    const submissions = submissionRes.data.submissions;

    const grouped = {};
    submissions.forEach((s) => {
      if (!grouped[s.week]) grouped[s.week] = [];
      grouped[s.week].push(s);
    });

    const mergedSessions = initialSessions.map((s) => ({
      ...s,
      submissions: grouped[s.week] || [],
    }));

    setSessions(mergedSessions);
    setFullName(fullName);
    setUser({
      fullName,
      email,
      sessions: mergedSessions,
    }); // ‚úÖ PROFƒ∞L PANELƒ∞ ƒ∞√áƒ∞N

  } catch (err) {
    setError(err.response?.data?.error || err.message);
    if (err.response?.status === 403) {
      navigate("/login");
    }
  } finally {
    setLoading(false);
  }
};
useEffect(() => {
  fetchData();
}, []);

const handleSave = async (field) => {
  const token = localStorage.getItem("token");
  try {
    await axios.put(`${import.meta.env.VITE_API_URL}/api/profile`, {
      [field]: editValues[field]
    }, {
      headers: { Authorization: `Bearer ${token}` }
    });
    setEditingField(null);
    window.location.reload(); // Veya state g√ºncellemesi yapƒ±labilir
  } catch (err) {
    console.error("G√ºncelleme hatasƒ± ‚ùå", err);
  }
};



useEffect(() => {
  const fetchAnnouncements = async () => {
    const token = localStorage.getItem("token");
    try {
      const res = await axios.get(
        `${import.meta.env.VITE_API_URL}/api/attendance/announcements`,
        {
          headers: { Authorization: `Bearer ${token}` },
        }
      );
      if (res.data.success) {
        setAnnouncements(res.data.announcements);
      }
    } catch (err) {
      console.error("Duyurular alƒ±namadƒ± ‚ùå", err);
    }
  };

  fetchAnnouncements();
}, []);


  const handleAttend = async (week, day) => {
  try {
    const token = localStorage.getItem("token");
    const response = await axios.post(
      `${import.meta.env.VITE_API_URL}/api/attendance/${week}`,
      { day: day }, // üëà a√ßƒ±k√ßa belirt
      {
        headers: {
          Authorization: `Bearer ${token}`,
          "Content-Type": "application/json", // ‚úÖ Bu √ßok √∂nemli
        },
      }
    );

    if (!response.data.success) {
      throw new Error(response.data.error || "Katƒ±lƒ±m kaydedilemedi");
    }

    alert(`${week}. Hafta ${day}. G√ºn i√ßin katƒ±lƒ±m alƒ±ndƒ± ‚úÖ`);
    await fetchData();
  } catch (err) {
    alert(err.response?.data?.error || err.message);
  }
};

// üîß G√úNCELLENMƒ∞≈û handleTaskSubmit
const handleTaskSubmit = async (e, week, taskIndex) => {
  e.preventDefault();

  const inputName = `fileUrl-${week}-${taskIndex}`;
  const fileUrl = e.target.elements[inputName]?.value.trim();
  if (!fileUrl) return;

  const token = localStorage.getItem("token");

  try {
    const response = await axios.post(
      `${import.meta.env.VITE_API_URL}/api/attendance/session/${week}/task`,
      { fileUrl, taskIndex }, // üëà taskIndex de g√∂nderiliyor
      { headers: { Authorization: `Bearer ${token}` } }
    );

    const newSubmission = response.data.submission;

    alert("‚úÖ G√∂rev g√∂nderildi!");
    e.target.reset();

    // üîÅ Yeni g√∂nderimi ilgili g√∂rev index‚Äôine g√∂re ekle
    setSessions((prev) =>
      prev.map((s) =>
        s.week === week
          ? {
              ...s,
              submissions: [...(s.submissions || []), newSubmission],
            }
          : s
      )
    );
  } catch (err) {
    console.error("G√∂rev g√∂nderilemedi ‚ùå:", err);
    alert("G√∂rev g√∂nderilemedi. L√ºtfen baƒülantƒ±yƒ± kontrol edin.");
  }
};

const handleDeleteSubmission = async (id) => {
  const token = localStorage.getItem("token");

  try {
    await axios.delete(
      `${import.meta.env.VITE_API_URL}/api/attendance/task-submissions/${id}`,
      {
        headers: { Authorization: `Bearer ${token}` },
      }
    );

    alert("G√∂nderim silindi ‚úÖ");

    // ‚õîÔ∏è _id ile e≈üle≈üen g√∂nderimi kaldƒ±r
    setSessions((prev) =>
      prev.map((s) => ({
        ...s,
        submissions: s.submissions?.filter((sub) => sub._id !== id),
      }))
    );
  } catch (err) {
    console.error("Silme hatasƒ± ‚ùå:", err);
    alert("G√∂nderim silinemedi.");
  }
};

useEffect(() => {
  const fetchMyCertificate = async () => {
    const token = localStorage.getItem("token");
    try {
      const res = await axios.get(`${import.meta.env.VITE_API_URL}/api/certificates/my-certificate`, {
        headers: { Authorization: `Bearer ${token}` }
      });
      setCertificateUrl(res.data?.url || "");
    } catch (err) {
      console.error("Sertifika alƒ±namadƒ± ‚ùå", err);
    }
  };

  fetchMyCertificate();
}, []);

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-900">
        <div className="text-white text-2xl">Y√ºkleniyor...</div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-900">
        <div className="text-red-400 text-xl p-4 bg-black/50 rounded-lg max-w-md text-center">
          {error}
        </div>
      </div>
    );
  }

  return (
    <div className="flex flex-col lg:flex-row min-h-screen w-full bg-cover bg-center bg-no-repeat text-white" style={{ backgroundImage: "url('/background1.png')" }}>
      
      {/* MOBILE HEADER */}
      <div className="lg:hidden flex items-center justify-between p-4 bg-black/70 border-b border-white/30 backdrop-blur-sm">
        <button
          onClick={() => setSidebarOpen(!sidebarOpen)}
          className="text-white p-2 hover:bg-white/20 rounded-lg transition"
        >
          <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
        <h1 className="text-lg font-bold text-yellow-400">Katƒ±lƒ±mcƒ± Paneli</h1>
        <div className="w-8"></div>
      </div>

      {/* SIDEBAR */}
      <aside
  className={`fixed top-0 left-0 h-screen w-72 bg-black/30 backdrop-blur-md border-r border-white/20 flex flex-col z-50 transform transition-all duration-300 ease-in-out
    ${sidebarOpen ? 'translate-x-0' : '-translate-x-full'}
    lg:translate-x-0 lg:static lg:min-h-screen lg:h-auto`}
>

        {/* Mobile Close */}
        <button
          onClick={() => setSidebarOpen(false)}
          className="lg:hidden absolute top-4 right-4 text-white hover:bg-white/20 p-2 rounded-full transition"
        >
          <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>

        {/* Header */}
        <div className="text-center text-white pt-8 pb-6 px-4 border-b border-white/10">
          <div className="bg-yellow-400/10 border border-yellow-400/30 rounded-xl p-4 mb-2 backdrop-blur-sm">
            <p className="text-lg font-semibold text-yellow-300">Merhaba,</p>
            <p className="text-xl font-bold text-yellow-300">{fullName} üëã</p>
          </div>
        </div>

        {/* Navigation */}
        <nav className="flex flex-col gap-3 p-4 flex-grow">
          {panels.map(({ key, icon, title }) => (
            <button
              key={key}
              onClick={() => setActivePanel(key)}
              className={`text-left px-4 py-3 rounded-xl font-semibold transition-all duration-200 hover:scale-[1.02] ${
                activePanel === key
                  ? "bg-yellow-400 text-black shadow-lg border-yellow-500"
                  : "bg-white/5 border border-white/10 text-white hover:bg-white/10 hover:border-yellow-400"
              } flex items-center gap-3`}
            >
              {icon} {title}
            </button>
          ))}
        </nav>
        {/* Footer */}
      <div className="p-4 border-t border-white/10 text-center text-xs text-white/50">
        Huawei Cloud AI Bootcamp ¬© 2025
      </div>
      </aside>

      {/* OVERLAY for mobile */}
      {sidebarOpen && (
        <div
          className="fixed inset-0 bg-black/60 z-40 lg:hidden"
          onClick={() => setSidebarOpen(false)}
        ></div>
      )}

      {/* MAIN CONTENT */}
      <main className="flex-1 lg:ml-0 p-4 lg:p-6 min-h-screen transition-all overflow-auto">
        {/* Desktop Header */}
        <div className="hidden lg:block text-center mb-8">
          <div className="flex justify-center items-center gap-8 mb-4">
            <img src="/huaweilogo.png" alt="Huawei" className="h-20 object-contain" />
            <img src="/hsdlogo.png" alt="Partner" className="h-40 object-contain" />
          </div>
          <h1 className="text-4xl font-bold text-yellow-400">Huawei Cloud AI Bootcamp</h1>
        </div>
        {/* Panel Ba≈ülƒ±ƒüƒ± */}
        <h2 className="text-xl lg:text-2xl font-bold text-yellow-400 mb-6 lg:mb-8 flex items-center gap-2">
          {panelTitles[activePanel]}
          </h2>

{activePanel === "Program" && (
  <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-5">
    
    {/* üì£ A√ßƒ±lƒ±≈ü Toplantƒ±sƒ± Kartƒ± */}
    <div className="bg-white/10 border border-white/20 p-5 rounded-xl transition hover:scale-[1.02] hover:border-yellow-400 backdrop-blur-sm">
      <h3 className="text-lg font-bold text-yellow-300 mb-3 flex items-center gap-2">
        <span className="bg-yellow-400/20 border border-yellow-400/30 rounded-lg px-3 py-1">
          üì£ A√ßƒ±lƒ±≈ü Toplantƒ±sƒ±
        </span>
      </h3>
      <div className="mb-4">
        <p className="text-sm font-semibold text-white mb-1">üé• YouTube Kaydƒ±</p>
        <a
          href="https://www.youtube.com/live/R1dki1PzVV4?si=QczerDJiKmnIe6D-" // kendi linkinle deƒüi≈ütir
          target="_blank"
          rel="noopener noreferrer"
          className="text-yellow-300 underline text-sm hover:text-yellow-400"
        >
          A√ßƒ±lƒ±≈ü toplantƒ±sƒ±nƒ± izlemek i√ßin tƒ±klayƒ±n
        </a>
      </div>

      <div>
        <p className="text-sm font-semibold text-white mb-1">üìù A√ßƒ±klama</p>
        <p className="text-white/90 text-sm">
          Program hakkƒ±nda genel bilgilendirme, tanƒ±≈üma ve beklentilerin payla≈üƒ±ldƒ±ƒüƒ± oturumdur.
        </p>
      </div>
    </div>

    {/* Haftalƒ±k Oturumlar */}
    {sessions.map((s) => (
      <div
        key={s.week}
        className="bg-white/10 border border-white/20 p-5 rounded-xl transition hover:scale-[1.02] hover:border-yellow-400 backdrop-blur-sm"
      >
        <h3 className="text-lg font-bold text-yellow-300 mb-3 flex items-center gap-2">
          <span className="bg-yellow-400/20 border border-yellow-400/30 rounded-lg px-3 py-1">
            {s.week}. Hafta
          </span>
        </h3>

        {/* 1. G√ºn */}
        <div className="mb-4">
          <p className="text-sm font-semibold text-white mb-1">üìÖ 1. G√ºn Konularƒ±</p>
          {s.topic?.day1 ? (
            <ul className="list-disc list-inside text-sm text-white/90 mb-2 space-y-1">
              {s.topic.day1.split("\n").map((line, i) => (
                <li key={`d1-${i}`}>{line}</li>
              ))}
            </ul>
          ) : (
            <p className="text-gray-400 italic text-sm mb-2">Hen√ºz konu girilmedi.</p>
          )}
        </div>

        {/* 2. G√ºn */}
        <div>
          <p className="text-sm font-semibold text-white mb-1">üìÖ 2. G√ºn Konularƒ±</p>
          {s.topic?.day2 ? (
            <ul className="list-disc list-inside text-sm text-white/90 mb-2 space-y-1">
              {s.topic.day2.split("\n").map((line, i) => (
                <li key={`d2-${i}`}>{line}</li>
              ))}
            </ul>
          ) : (
            <p className="text-gray-400 italic text-sm mb-2">Hen√ºz konu girilmedi.</p>
          )}
        </div>
      </div>
    ))}
  </div>
)}

        {activePanel === "Katƒ±lƒ±m" && (
  <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-5">
    {sessions.map((s) => (
      <div key={s.week} className="relative bg-white/10 border border-white/20 p-5 rounded-xl hover:scale-[1.02] hover:border-yellow-400 transition backdrop-blur-sm">
        <h3 className="text-lg font-bold text-yellow-300 mb-3 flex items-center gap-2">
          <span className="bg-yellow-400/20 border border-yellow-400/30 rounded-lg px-3 py-1">
            {s.week}. Hafta
          </span>
        </h3>

        {/* 1. G√ºn Katƒ±lƒ±m */}
        <div className="mb-3">
          <p className="text-sm font-semibold text-white mb-1">üìÖ 1. G√ºn</p>
          {s.attendedDay1 ? (
            <p className="text-green-400 font-bold">‚úî Katƒ±ldƒ±nƒ±z</p>
          ) : s.activeDay1 ? (
            <button
              onClick={() => handleAttend(s.week, 1)}
              className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded font-semibold text-sm"
            >
              Katƒ±ldƒ±m
            </button>
          ) : (
            <p className="text-gray-400 italic text-sm">Katƒ±lƒ±m kapalƒ±</p>
          )}
        </div>

        {/* 2. G√ºn Katƒ±lƒ±m */}
        <div>
          <p className="text-sm font-semibold text-white mb-1">üìÖ 2. G√ºn</p>
          {s.attendedDay2 ? (
            <p className="text-green-400 font-bold">‚úî Katƒ±ldƒ±nƒ±z</p>
          ) : s.activeDay2 ? (
            <button
              onClick={() => handleAttend(s.week, 2)}
              className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded font-semibold text-sm"
            >
              Katƒ±ldƒ±m
            </button>
          ) : (
            <p className="text-gray-400 italic text-sm">Katƒ±lƒ±m kapalƒ±</p>
          )}
        </div>
      </div>
    ))}
  </div>
)}


        {activePanel === "Eƒüitmenler" && (
          <div className="grid grid-cols-1 sm:grid-cols-3 gap-6">
            {[
              { name: "Hakan Akta≈ü", title: "Data Scientist ‚Äì Huawei", linkedin: "https://www.linkedin.com/in/hakanaktas1/", image: "/hakanaktas.jpg" },
              { name: "Barƒ±≈ü Kaplan", title: "AI & ML Engineer/Data Scientist ‚Äì Huawei", linkedin: "https://www.linkedin.com/in/baris-k-896652175/", image: "/bariskaplan.png" },
              { name: "Sefa Bilicier", title: "Cloud Solutions Engineer - Huawei", linkedin: "https://tr.linkedin.com/in/sefabilicier", image: "/sefabilicier.jpg" },
            ].map((e, i) => (
              <div key={i} className="bg-white/10 border border-white/20 p-4 rounded-lg text-center transition hover:scale-[1.015] hover:border-yellow-400">
                <img src={e.image} alt="Eƒüitmen" className="w-20 h-20 mx-auto rounded-full object-cover mb-3" />
                <h3 className="text-lg font-semibold">{e.name}</h3>
                <p className="text-sm text-gray-300 mb-1">{e.title}</p>
                <a href={e.linkedin} target="_blank" className="text-blue-400 hover:underline text-sm">LinkedIn</a>
              </div>
            ))}
          </div>
        )}

        {activePanel === "Kaynaklar" && (
  <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-5">
    {sessions.map((s) => (
      <div
        key={s.week}
        className="bg-white/10 border border-white/20 p-5 rounded-xl transition hover:scale-[1.02] hover:border-yellow-400 backdrop-blur-sm"
      >
        <h3 className="text-lg font-bold text-yellow-300 mb-3 flex items-center gap-2">
          <span className="bg-yellow-400/20 border border-yellow-400/30 rounded-lg px-3 py-1">
            {s.week}. Hafta Kaynaklarƒ±
          </span>
        </h3>

        {/* 1. G√ºn Kaynaklar */}
        <div className="mb-5">
          <p className="text-sm font-semibold text-white mb-2">üìÖ 1. G√ºn Kaynaklarƒ±</p>

          {/* Medium */}
          {s.mediumUrl?.day1 ? (
            <div className="flex items-center justify-between bg-white/5 p-3 rounded-lg border border-white/10 mb-2">
              <span className="text-sm text-white flex items-center gap-2">
                <span className="bg-green-500/20 p-1.5 rounded-lg">üìù</span> Medium
              </span>
              <a
                href={s.mediumUrl.day1}
                target="_blank"
                rel="noopener noreferrer"
                className="bg-green-600 hover:bg-green-700 text-white px-3 py-1.5 rounded-lg text-sm font-semibold transition flex items-center gap-1"
              >
                Oku
              </a>
            </div>
          ) : (
            <p className="text-gray-400 italic text-sm mb-2">Medium baƒülantƒ±sƒ± yok</p>
          )}

          {/* Video */}
          {s.videoUrl?.day1 ? (
            <div className="flex items-center justify-between bg-white/5 p-3 rounded-lg border border-white/10">
              <span className="text-sm text-white flex items-center gap-2">
                <span className="bg-blue-500/20 p-1.5 rounded-lg">üé•</span> Video
              </span>
              <a
                href={s.videoUrl.day1}
                target="_blank"
                rel="noopener noreferrer"
                className="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1.5 rounded-lg text-sm font-semibold transition flex items-center gap-1"
              >
                ƒ∞zle
              </a>
            </div>
          ) : (
            <p className="text-gray-400 italic text-sm mb-2">Video baƒülantƒ±sƒ± yok</p>
          )}
        </div>

        {/* 2. G√ºn Kaynaklar */}
        <div>
          <p className="text-sm font-semibold text-white mb-2">üìÖ 2. G√ºn Kaynaklarƒ±</p>

          {/* Medium */}
          {s.mediumUrl?.day2 ? (
            <div className="flex items-center justify-between bg-white/5 p-3 rounded-lg border border-white/10 mb-2">
              <span className="text-sm text-white flex items-center gap-2">
                <span className="bg-green-500/20 p-1.5 rounded-lg">üìù</span> Medium
              </span>
              <a
                href={s.mediumUrl.day2}
                target="_blank"
                rel="noopener noreferrer"
                className="bg-green-600 hover:bg-green-700 text-white px-3 py-1.5 rounded-lg text-sm font-semibold transition flex items-center gap-1"
              >
                Oku
              </a>
            </div>
          ) : (
            <p className="text-gray-400 italic text-sm mb-2">Medium baƒülantƒ±sƒ± yok</p>
          )}

          {/* Video */}
          {s.videoUrl?.day2 ? (
            <div className="flex items-center justify-between bg-white/5 p-3 rounded-lg border border-white/10">
              <span className="text-sm text-white flex items-center gap-2">
                <span className="bg-blue-500/20 p-1.5 rounded-lg">üé•</span> Video
              </span>
              <a
                href={s.videoUrl.day2}
                target="_blank"
                rel="noopener noreferrer"
                className="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1.5 rounded-lg text-sm font-semibold transition flex items-center gap-1"
              >
                ƒ∞zle
              </a>
            </div>
          ) : (
            <p className="text-gray-400 italic text-sm mb-2">Video baƒülantƒ±sƒ± yok</p>
          )}
        </div>
      </div>
    ))}
  </div>
)}


        {activePanel === "Kurallar" && (
  <div className="space-y-4 text-sm text-white/90 leading-relaxed">
    <h3 className="text-lg font-bold text-yellow-300 mb-2">üìå Program Kurallarƒ±</h3>
    <ul className="list-disc list-inside space-y-1">
      <li>üìÖ Bu program 4 haftalƒ±k bir eƒüitim s√ºrecini kapsamaktadƒ±r.</li>
      <li>üìù Katƒ±lƒ±mƒ±nƒ±z her hafta otomatik olarak sistemden takip edilmektedir.</li>
      <li>üìä Sertifika almak i√ßin en az <span className="text-yellow-300 font-semibold">%80</span> oranƒ±nda katƒ±lƒ±m gereklidir.</li>
      <li>üéì Eƒüitimi tamamlayanlara katƒ±lƒ±m belgesi verilecektir.</li>
    </ul>

    <h3 className="text-lg font-bold text-yellow-300 mt-6 mb-2">ü§ù Topluluk Kurallarƒ±</h3>
    <ul className="list-disc list-inside space-y-1">
      <li>üí¨ T√ºm katƒ±lƒ±mcƒ±lardan saygƒ±lƒ± ve destekleyici bir ileti≈üim beklenmektedir.</li>
      <li>üö´ Hakaret, spam veya reklam i√ßerikli mesajlar yasaktƒ±r.</li>
      <li>üì• Sorularƒ±nƒ±zƒ± sormaktan √ßekinmeyin, topluluk yardƒ±mla≈ümayƒ± sever.</li>
      <li>üß† Katƒ±lƒ±mƒ±nƒ±z ve katkƒ±larƒ±nƒ±z program kalitesini artƒ±rƒ±r.</li>
      <li>üì® Sorun ya≈üarsanƒ±z eƒüitmenlere veya destek kanallarƒ±na ula≈üabilirsiniz.</li>
    </ul>
  </div>
)}


{activePanel === "G√∂revler" && (
  <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-5">
    {sessions.map((s) => (
      <div
        key={s.week}
        className={`p-5 rounded-xl border transition duration-300 ${
          s.taskActive
            ? "bg-white/10 border-white/20 hover:border-yellow-400"
            : "bg-white/5 border-white/10 opacity-60"
        }`}
      >
        <h3 className="text-lg font-bold text-yellow-300 mb-3">
          {s.week}. Hafta G√∂revleri
        </h3>

{s.tasks?.length > 0 ? (
  <div className="space-y-4 mb-4">
    {s.tasks.map((task, i) => (
      <div key={i} className="bg-white/5 p-3 rounded border border-white/10">
        <p className="text-sm text-yellow-300 font-semibold mb-2">
          {i + 1}. G√∂rev: <span className="text-white">{task}</span>
        </p>

        {/* G√∂nderimler ve durumlar */}
       <ul className="text-white text-xs mb-2 space-y-1">
  {s.submissions
    ?.filter((sub) => sub.taskIndex === i)
    .map((sub, idx) => (
      <li
        key={sub.id || sub._id}
        className="flex justify-between items-center gap-2"
      >
        <div className="flex items-center gap-3 flex-1">
          <a
            href={sub.fileUrl}
            target="_blank"
            rel="noopener noreferrer"
            className="text-blue-300 underline"
          >
            {idx + 1}. G√∂nderim
          </a>

          <span
            className={`text-xs font-semibold ${
              sub.status === "approved"
                ? "text-green-400"
                : sub.status === "rejected"
                ? "text-red-400"
                : "text-yellow-400"
            }`}
          >
            {sub.status === "approved"
              ? "Onaylandƒ±"
              : sub.status === "rejected"
              ? "Reddedildi"
              : "Bekliyor"}
          </span>
        </div>

        {/* ‚ùå Silme Butonu */}
        <button
          onClick={() => handleDeleteSubmission(sub.id || sub._id)}
          className="text-red-400 hover:underline text-xs"
        >
          üóë Sil
        </button>
      </li>
    ))}
</ul>


        {/* Yeni G√∂nderim Formu */}
        <form
          onSubmit={(e) => handleTaskSubmit(e, s.week, i)}
          className="flex gap-2"
        >
          <input
            type="text"
            name={`fileUrl-${s.week}-${i}`}
            placeholder="Dosya baƒülantƒ±sƒ±"
            required
            className="flex-1 p-2 rounded bg-white/10 border border-white/20 text-white text-sm"
          />
          <button
            type="submit"
            className={`${
              s.taskActive
                ? "bg-green-600 hover:bg-green-700"
                : "bg-gray-500 cursor-not-allowed"
            } text-white px-3 py-1.5 rounded text-sm font-semibold`}
            disabled={!s.taskActive}
          >
            G√∂nder
          </button>
        </form>

        {!s.taskActive && (
          <p className="text-yellow-300 text-xs italic mt-2">
            Bu haftanƒ±n g√∂revi hen√ºz aktif deƒüil.
          </p>
        )}
      </div>
    ))}
  </div>
) : (
  <p className="text-gray-300 italic text-sm mb-4">G√∂rev tanƒ±mlanmamƒ±≈ü</p>
)}

      </div>
    ))}
  </div>
)}


{activePanel === "Duyurular" && (
  <div className="space-y-4">
    {announcements?.length > 0 ? (
      announcements.map((a) => (
        <div
          key={a._id}
          className="relative bg-yellow-50/10 hover:scale-[1.02] transition-transform duration-300 border border-yellow-400/60 hover:border-yellow-400/90 p-5 rounded-2xl shadow-md group"
        >
          {/* Ba≈ülƒ±k kutusu */}
          <div className="inline-block bg-yellow-300/20 text-yellow-300 text-xl font-bold px-4 py-2 rounded-md mb-2">
            {a.title}
          </div>

          {/* ƒ∞√ßerik */}
          <p className="text-white/90 text-sm whitespace-pre-line leading-relaxed mt-2">
            {a.content}
          </p>

          {/* Tarih - saƒü √ºst k√∂≈üede */}
          <div className="absolute top-3 right-4 text-yellow-200 text-xs italic">
            {new Date(a.createdAt).toLocaleString("tr-TR")}
          </div>
        </div>
      ))
    ) : (
      <p className="text-white/60 italic">Hen√ºz duyuru bulunmamaktadƒ±r.</p>
    )}
  </div>
)}

{activePanel === "Hakkƒ±mƒ±zda" && (
   <div className="p-6 bg-white/5 border border-white/20 rounded-xl text-white space-y-6">

    <p className="text-white/90 text-sm leading-relaxed">
      <span className="font-semibold text-yellow-200">Huawei Cloud AI Bootcamp</span>, yapay zek√¢ ve bulut bili≈üim alanƒ±nda kendini geli≈ütirmek isteyen katƒ±lƒ±mcƒ±lar i√ßin √∂zel olarak tasarlanmƒ±≈ü teknik ve ki≈üisel geli≈üim odaklƒ± bir eƒüitim programƒ±dƒ±r. Bu platform, yeni nesil teknolojileri tanƒ±tmak, katƒ±lƒ±mcƒ±larƒ±n pratik projelerle deneyim kazanmasƒ±nƒ± saƒülamak ve sekt√∂rel farkƒ±ndalƒ±klarƒ±nƒ± artƒ±rmak amacƒ±yla olu≈üturulmu≈ütur.
    </p>

    <p className="text-white/90 text-sm leading-relaxed">
      Program s√ºresince katƒ±lƒ±mcƒ±lar:
    </p>

    <ul className="list-disc list-inside text-sm text-white/90 space-y-1">
      <li>üìå Ger√ßek d√ºnya problemlerini √ß√∂zen projeler √ºretir</li>
      <li>üìå Huawei Cloud altyapƒ±sƒ± √ºzerinde uygulamalƒ± deneyim kazanƒ±r</li>
      <li>üìå Mentor desteƒüi ile bireysel geli≈üimlerini destekler</li>
      <li>üìå Haftalƒ±k g√∂revler, videolar ve kaynaklarla d√ºzenli olarak ilerleme saƒülar</li>
    </ul>

    <p className="text-white/90 text-sm leading-relaxed">
      Ayrƒ±ca her katƒ±lƒ±mcƒ±nƒ±n ilerlemesi ≈üeffaf bir ≈üekilde takip edilir; katƒ±lƒ±m, g√∂rev g√∂nderimi ve ba≈üarƒ± oranlarƒ± d√ºzenli olarak deƒüerlendirilir.
    </p>

    <div className="bg-yellow-100/10 border border-yellow-300/30 p-4 rounded-xl">
      <h2 className="text-lg font-semibold text-yellow-300 mb-2">üéØ Vizyonumuz</h2>
      <p className="text-sm text-white/90">
        Geleceƒüin teknoloji liderlerini bulut ve yapay zek√¢ alanƒ±nda yetkin bireyler olarak yeti≈ütirmek.
      </p>
    </div>

    <div className="bg-yellow-100/10 border border-yellow-300/30 p-4 rounded-xl">
      <h2 className="text-lg font-semibold text-yellow-300 mb-2">üöÄ Misyonumuz</h2>
      <p className="text-sm text-white/90">
        Eri≈üilebilir, kaliteli ve uygulamalƒ± bir eƒüitim ortamƒ± sunarak, bilgiye dayalƒ± √ºretkenliƒüi ve ekip √ßalƒ±≈ümasƒ±nƒ± te≈üvik etmek.
      </p>
    </div>

    <p className="text-white/90 text-sm leading-relaxed">
      Bu platform, sadece bir eƒüitim alanƒ± deƒüil; aynƒ± zamanda bir topluluk, bir √ºretim ortamƒ± ve yeni yeteneklerin ke≈üfedildiƒüi bir yolculuktur.
    </p>
  </div>
)}

{activePanel === "Huawei Cloud Hesabƒ±" && (
  <div className="p-6 bg-white/5 border border-white/20 rounded-xl text-white space-y-6">

    <p className="text-white/90 text-sm leading-relaxed">
      Huawei Cloud √ºzerinde √ºcretsiz bir hesap olu≈üturmak olduk√ßa kolaydƒ±r. A≈üaƒüƒ±daki adƒ±mlarƒ± takip ederek dakikalar i√ßinde hesabƒ±nƒ±zƒ± aktif h√¢le getirebilirsiniz:
    </p>

    <ol className="list-decimal list-inside space-y-2 text-sm text-white/90">
      <li>
        <span className="font-semibold text-yellow-300">Resmi Siteye Giri≈ü:</span>{" "}
        <a
          href="https://intl.huaweicloud.com/"
          target="_blank"
          rel="noopener noreferrer"
          className="underline text-blue-300 hover:text-blue-400"
        >
          Huawei Cloud
        </a>
      </li>
      <li>
        Saƒü √ºstteki <span className="font-semibold text-yellow-300">‚ÄúRegister‚Äù</span> veya <span className="font-semibold text-yellow-300">‚ÄúSign Up‚Äù</span> butonuna tƒ±klayƒ±n.
      </li>
      <li>E-posta adresi ile kayƒ±t olun ve gelen doƒürulama kodunu girin.</li>
      <li>≈ûifre ve ki≈üisel bilgileri doldurun.</li>
      <li>
        <span className="font-semibold text-yellow-300">‚ÄúIndividual‚Äù</span> se√ßeneƒüi ile devam ederek kredi kartƒ± bilginizi girin (√ºcret alƒ±nmaz).
      </li>
      <li>Doƒürulama sonrasƒ± hesabƒ±nƒ±z aktif h√¢le gelecektir.</li>
    </ol>

    <div className="bg-yellow-100/10 border border-yellow-300/30 p-4 rounded-xl">
      <h2 className="text-lg font-semibold text-yellow-300 mb-2">üì∫ Video Rehber</h2>
      <p className="text-sm text-white/90 mb-3">
        A≈üaƒüƒ±daki baƒülantƒ±ya tƒ±klayarak Huawei Cloud hesap a√ßma s√ºrecini adƒ±m adƒ±m izleyebilirsiniz:
      </p>
      <a
        href="https://www.youtube.com/watch?v=dkpHpOBsCMA"
        target="_blank"
        rel="noopener noreferrer"
        className="block w-full text-center bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition"
      >
        üîó Videoyu YouTube‚Äôda A√ß
      </a>
    </div>

    <p className="text-white/90 text-sm leading-relaxed">
      Hesabƒ±nƒ±zƒ± ba≈üarƒ±yla a√ßtƒ±ktan sonra <span className="text-yellow-300 font-medium">Huawei Cloud Console</span> √ºzerinden servisleri ke≈üfetmeye ba≈ülayabilirsiniz.
    </p>
  </div>
)}

{activePanel === "Profil" && user && (
  <div className="grid grid-cols-1 md:grid-cols-2 gap-6 text-white">
    
    {/* üë§ Katƒ±lƒ±mcƒ± Bilgileri */}
    <div className="col-span-full bg-white/10 backdrop-blur-md p-6 rounded-xl border border-yellow-300 shadow-md hover:scale-[1.01] transition">
      <h2 className="text-xl font-bold text-yellow-300 mb-4">üë§ Katƒ±lƒ±mcƒ± Bilgileri</h2>

      {/* Ad Soyad */}
      <div className="mb-4">
        <label className="block text-sm text-yellow-100">Ad Soyad</label>
        {editingField === "fullName" ? (
          <div className="flex items-center mt-1 space-x-2">
            <input
              className="w-full bg-white/5 border border-yellow-300 text-white px-3 py-2 rounded-lg"
              value={editValues.fullName}
              onChange={(e) =>
                setEditValues((prev) => ({ ...prev, fullName: e.target.value }))
              }
            />
            <button
              className="bg-yellow-500 hover:bg-yellow-600 text-white px-3 py-1 rounded"
              onClick={() => handleSave("fullName")}
            >
              Kaydet
            </button>
            <button
              className="text-yellow-300 hover:underline text-sm"
              onClick={() => setEditingField("")}
            >
              ƒ∞ptal
            </button>
          </div>
        ) : (
          <div className="flex items-center justify-between mt-1">
            <span>{user.fullName}</span>
            <button
              className="flex items-center text-yellow-300 hover:text-yellow-400 text-sm"
              onClick={() => setEditingField("fullName")}
            >
              <span className="mr-1">D√ºzenle</span>
              <svg xmlns="http://www.w3.org/2000/svg" className="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15.232 5.232l3.536 3.536M9 11l3.536-3.536a2 2 0 112.828 2.828L11 13.828l-4 1 1-4z" />
              </svg>
            </button>
          </div>
        )}
      </div>

      {/* E-posta */}
      <div>
        <label className="block text-sm text-yellow-100">E-posta</label>
        {editingField === "email" ? (
          <div className="flex items-center mt-1 space-x-2">
            <input
              className="w-full bg-white/5 border border-yellow-300 text-white px-3 py-2 rounded-lg"
              value={editValues.email}
              onChange={(e) =>
                setEditValues((prev) => ({ ...prev, email: e.target.value }))
              }
            />
            <button
              className="bg-yellow-500 hover:bg-yellow-600 text-white px-3 py-1 rounded"
              onClick={() => handleSave("email")}
            >
              Kaydet
            </button>
            <button
              className="text-yellow-300 hover:underline text-sm"
              onClick={() => setEditingField("")}
            >
              ƒ∞ptal
            </button>
          </div>
        ) : (
          <div className="flex items-center justify-between mt-1">
            <span>{user.email}</span>
            <button
              className="flex items-center text-yellow-300 hover:text-yellow-400 text-sm"
              onClick={() => setEditingField("email")}
            >
              <span className="mr-1">D√ºzenle</span>
              <svg xmlns="http://www.w3.org/2000/svg" className="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15.232 5.232l3.536 3.536M9 11l3.536-3.536a2 2 0 112.828 2.828L11 13.828l-4 1 1-4z" />
              </svg>
            </button>
          </div>
        )}
      </div>
    </div>

    {/* üìä Katƒ±lƒ±m √ñzeti */}
    <div className="bg-white/10 backdrop-blur-md p-6 rounded-xl border border-yellow-300 shadow-md hover:scale-[1.01] transition">
      <h2 className="text-xl font-bold text-yellow-300 mb-4">üìä Katƒ±lƒ±m √ñzeti</h2>
      <p className="text-sm">Toplam G√ºn: {user.sessions.length * 2}</p>
      <p className="text-sm mt-1">Katƒ±ldƒ±ƒüƒ± G√ºn: {user.sessions.filter(s => s.attendedDay1).length + user.sessions.filter(s => s.attendedDay2).length}</p>
      <p className="text-sm mt-1">
        Katƒ±lƒ±m Oranƒ±:{" "}
        <span className="font-semibold text-yellow-200">
          {Math.round(
            ((user.sessions.filter(s => s.attendedDay1).length + user.sessions.filter(s => s.attendedDay2).length) / (user.sessions.length * 2)) * 100
          )}%
        </span>
      </p>
    </div>

    {/* üìù G√∂rev √ñzeti */}
    <div className="bg-white/10 backdrop-blur-md p-6 rounded-xl border border-yellow-300 shadow-md hover:scale-[1.01] transition">
      <h2 className="text-xl font-bold text-yellow-300 mb-4">üìù G√∂rev √ñzeti</h2>
      <p className="text-sm">
        G√∂nderilen G√∂revler:{" "}
        {user.sessions.reduce((acc, s) => acc + (s.submissions?.length || 0), 0)}
      </p>
      <p className="text-sm mt-1">
        Aktif G√∂rev Haftasƒ±:{" "}
        {user.sessions.filter(s => s.taskActive && s.submissions?.length > 0).length}
      </p>
    </div>
  </div>
)}


{activePanel === "Sertifika" && user && (
  <div className="p-6">
    <div className="grid grid-cols-1 md:grid-cols-2 gap-6 text-white">
      <div className="col-span-full">
        {certificateUrl ? (
          <div className="bg-white/5 backdrop-blur-sm border border-yellow-400 rounded-2xl shadow-xl p-6 text-center transition transform hover:scale-[1.02] duration-300 ease-in-out">
            <h2 className="text-2xl font-bold text-yellow-300 mb-3">üéâ Tebrikler {user.fullName}!</h2>
            <p className="text-white/90 mb-4">
              Huawei Cloud AI Bootcamp'i ba≈üarƒ±yla tamamladƒ±nƒ±z. A≈üaƒüƒ±daki baƒülantƒ±dan sertifikanƒ±zƒ± g√∂r√ºnt√ºleyebilirsiniz:
            </p>
            <a
              href={certificateUrl}
              target="_blank"
              rel="noopener noreferrer"
              className="inline-block mt-2 px-5 py-2 bg-yellow-500 hover:bg-yellow-600 text-white font-semibold rounded-lg shadow-md transition"
            >
              üéì Sertifikayƒ± G√∂r√ºnt√ºle
            </a>
            <p className="text-white/60 text-sm mt-4 italic">Bu sertifika eƒüitmeniniz tarafƒ±ndan onaylanmƒ±≈ütƒ±r.</p>
          </div>
        ) : (
          <div className="text-center bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-5 shadow-inner">
            <p className="text-yellow-200 text-lg font-semibold">Hen√ºz sertifikanƒ±z y√ºklenmedi.</p>
            <p className="text-white/70 text-sm mt-2">T√ºm ko≈üullarƒ± saƒüladƒ±ktan sonra sertifikanƒ±z burada g√∂r√ºnecektir.</p>
          </div>
        )}
      </div>
    </div>
  </div>
)}

{activePanel === "ƒ∞leti≈üim" && (
  <div className="flex justify-center text-white mt-6">
    <div className="bg-white/10 backdrop-blur-md p-6 rounded-2xl border border-yellow-300 shadow-lg w-full max-w-2xl text-center">
      <h2 className="text-2xl font-bold text-yellow-300 mb-4">üì¨ ƒ∞leti≈üim</h2>
      <p className="text-white/70 mb-6">Bizimle a≈üaƒüƒ±daki kanallardan ileti≈üime ge√ßebilirsiniz:</p>

      <div className="flex justify-center gap-6 text-yellow-300 text-3xl">
        {/* Instagram */}
        <a
          href="https://www.instagram.com/hsdturkiye/"
          target="_blank"
          rel="noopener noreferrer"
          className="hover:text-yellow-400 transition transform hover:scale-110"
        >
          <i className="fab fa-instagram"></i>
        </a>

        {/* LinkedIn */}
        <a
          href="https://www.linkedin.com/company/hsdturkiye/"
          target="_blank"
          rel="noopener noreferrer"
          className="hover:text-yellow-400 transition transform hover:scale-110"
        >
          <i className="fab fa-linkedin"></i>
        </a>

        {/* Medium */}
        <a
          href="https://medium.com/huawei-developers-tr"
          target="_blank"
          rel="noopener noreferrer"
          className="hover:text-yellow-400 transition transform hover:scale-110"
        >
          <i className="fab fa-medium"></i>
        </a>

        {/* E-posta */}
        <a
          href="mailto:KubraBilgic1@huawei.com"
          className="hover:text-yellow-400 transition transform hover:scale-110"
        >
          <i className="fas fa-envelope"></i>
        </a>
      </div>
    </div>
  </div>
)}

      </main>
    </div>
  );
};

export default ParticipantDashboard;
